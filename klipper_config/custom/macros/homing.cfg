# WARNING: DO NOT EDIT THIS FILE
# To override settings from this file, you can copy and paste the relevant
# sections into your printer.cfg and change it there.

[homing_override]
set_position_z: -5 # this is the minimum allowed Z which means the nozzle cannot move closer to the bed, for safety.
axes: xyz
gcode:
    # ratos config 
	{% set safe_home_x = printer["gcode_macro RatOS"].safe_home_x %}
	{% set safe_home_y = printer["gcode_macro RatOS"].safe_home_y %}
	{% set z_hop = printer["gcode_macro RatOS"].homing_z_hop|float %}
	{% set z_probe = printer["gcode_macro RatOS"].z_probe|lower %}
	{% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
	{% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
	{% set homing_x = printer["gcode_macro RatOS"].homing_x|lower %}
	{% set homing_y = printer["gcode_macro RatOS"].homing_y|lower %}
	{% set homing = printer["gcode_macro RatOS"].homing|lower %}
    {% set printable_x = printer["gcode_macro RatOS"].printable_x %}
    {% set printable_y = printer["gcode_macro RatOS"].printable_y %}

    # probe points in the center of the printable area 
    {% set probe_point_x = printable_x[0] + ((printable_x[1] - printable_x[0]) / 2) %}
    {% set probe_point_y = printable_y[0] + ((printable_y[1] - printable_y[0]) / 2) %}

    # get safe home points 
	{% set x_homed = 'x' in printer.toolhead.homed_axes %}
	{% set y_homed = 'y' in printer.toolhead.homed_axes %}
	{% if safe_home_x is not defined or safe_home_x|lower == 'middle' %}
		{% set safe_home_x = printable_x[0] + ((printable_x[1] - printable_x[0]) / 2) %}
	{% endif %}
	{% if safe_home_y is not defined or safe_home_y|lower == 'middle' %}
		{% set safe_home_y = printable_y[0] + ((printable_y[1] - printable_y[0]) / 2) %}
	{% endif %}

    # # reset IDEX mode
	# {% if printer["dual_carriage"] is defined %}
	# 	{% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
	# 	IDEX_SINGLE
	# {% endif %}

    # z-hop 
	M400                        # Wait for moves to finish
	G90                         # Absolute positioning
	G0 Z{z_hop} F{z_speed}      # Hop Z-Axis

    # to get a consistent toolhead x-offset we home y before x 
	{% if params.Y is defined or params.X is not defined and params.Z is not defined %}
		{% if homing_y == 'endstop' or homing == 'endstops' %}
			G28 Y
		{% elif homing_y == 'sensorless' or homing == 'sensorless' %}
			{ action_raise_error("sensorless homing not supported") }
		{% else %}
			{ action_raise_error("expected RatOS variable_homing_y to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_y, homing)) }
		{% endif %}
		{% set y_homed = True %}
		G0 Y{safe_home_y} F{speed}
	{% endif %}

    # home x 
	{% if params.X is defined or params.Y is not defined and params.Z is not defined %}
		{% if homing_x == 'endstop' or homing == 'endstops' %}
			G28 X
		{% elif homing_x == 'sensorless' or homing == 'sensorless' %}
			{ action_raise_error("sensorless homing not supported") }
		{% else %}
			{ action_raise_error("expected RatOS variable_homing_x to be 'sensorless' 'endstop' or variable_homing to be 'sensorless' or 'endstops' but found {} and {}".format(homing_x, homing)) }
		{% endif %}
		{% set x_homed = True %}
		# IDEX
		{% if printer["dual_carriage"] is defined %}
			# park toolhead in its parking position instead of the endstop position
			SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
			G1 X{printer["gcode_macro RatOS"].parking_position[1]} F{(printer["gcode_macro RatOS"].toolchange_travel_speed*60)}
			SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
			# select default toolhead
			T{printer["gcode_macro RatOS"].default_toolhead|int} S0
		{% endif %}
		G0 X{safe_home_x} F{speed}
	{% endif %}

    # home z 
	{% if params.Z is defined or params.Y is not defined and params.X is not defined %}
		RESPOND MSG="Homing Z"

		{% if x_homed == False or y_homed == False %}
			M118 X and Y must be homed before homing Z
		{% else %}
			{% if z_probe == "stowable" %}
				DEPLOY_PROBE
				G0 X{safe_home_x} Y{safe_home_y} F{speed}
				G28 Z
				G0 Z{z_hop} F{z_speed}
				STOW_PROBE
			{% else %}
				G0 X{safe_home_x} Y{safe_home_y} F{speed}
				G28 Z
				G0 Z{z_hop} F{z_speed} 
			{% endif %}
			# IDEX - Klipper bug workarround - to be fixed in homing.py->HomingMove->calc_toolhead_pos
			# issue is after z-home, klipper sets the x-pos to the x-stepper x-pos, no matter which toolhead was used for z-probing
			{% if printer["dual_carriage"] is defined %}
				SET_KINEMATIC_POSITION X={safe_home_x}
			{% endif %}
		{% endif %}
	{% endif %}

    # restore IDEX mode
	{% if printer["dual_carriage"] is defined %}
		{% if idex_mode == "copy" %}
			IDEX_COPY
		{% elif idex_mode == "mirror" %}
			IDEX_MIRROR
		{% endif %}
	{% endif %}


[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
  {% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
    RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
    G28
    SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
  {% else %}
    {% set axes = '' %}
    {% set isHomed = true %}
    {% set axesToHome = '' %}
    {% if params.X is defined %}
      {% set axes = axes ~ 'X ' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
    {% endif %}
    {% if params.Y is defined %}
      {% set axes = axes ~ 'Y ' %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
    {% endif %}
    {% if params.Z is defined %}
      {% set axes = axes ~ 'Z ' %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
      {% set axes = '' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if isHomed is false %}
      M117 Homing {axesToHome}
      RESPOND MSG="Homing {axesToHome}"
      G28 {axesToHome}
    {% else %}
      RESPOND MSG="All requested axes already homed, skipping.."
    {% endif %}
  {% endif %}
