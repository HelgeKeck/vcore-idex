# [gcode_macro PRIME_BLOB]
# gcode:
#   {% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
#   {% set x_start = 5 %}
#   {% set y_start = 5 %}
#   {% if printer.toolhead.extruder == 'extruder1' %}
#     {% set x_start = 295 %}
#   {% endif %}
#   # Absolute positioning
#   G90 
#   # Absolute extrusion
#   M82
#   M117 Prime blob...
#   # Lift 5 mm
#   G1 Z5 F3000
#   # Reset extrusion distance
#   G92 E0
#   # move to blob position
#   G1 X{x_start} Y{y_start} Z0.5 F{speed}
#   # Extrude a blob
#   G1 F300 E35
#   # 40% fan
#   M106 S77
#   # Move the extruder up by 5mm while extruding, breaks away from blob
#   G1 Z5 F100 E40
#   # Move to wipe position, but keep extruding so the wipe is attached to blob
#   G1 F200 Y{y_start + 25} E41 
#   # Go down diagonally while extruding
#   G1 F200 Y{y_start + 40} Z0.5 E43 
#   # 0% fan
#   M106 S0
#   # small wipe line
#   G1 F200 Y{y_start +50} Z0.5 E43.6 
#   _SET_EXTRUSION_MODE
#   # Reset extrusion distance
#   G92 E0


[gcode_macro _UNLOAD_FILAMENT]
gcode:
  # reset speed
  M220 S100
  # initial retract
  G92 E0
  G0 E-25 F3600
  G4 P500
  # remove string
  G92 E0
  G0 E20 F3600
  G4 P100
  # move to parking position, the center of the ptfe tube that goes to your hotend
  G92 E0
  G0 E-35 F3600
  G4 P3000
  # Eject
  G0 E-80 F6000
  # wait for movements
  M400


[gcode_macro IDEX_PRIME_BLOB]
description: Prints a primeblob, used internally, if configured, as part of the START_PRINT macro. Slower than PRIME_LINE but much more effective.
gcode:
  M117 Priming nozzle with prime blob..
  RESPOND MSG="Priming nozzle with prime blob.."

  {% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
  {% set z_speed = printer["gcode_macro RatOS"].macro_z_speed|float * 60 %}
  {% set toolhead_carriage = printer["gcode_macro RatOS"].toolhead_carriage %}
  {% set default_toolhead = printer["gcode_macro RatOS"].toolhead_default|default(0)|int %}

  {% set min_printable_x = printer["gcode_macro RatOS"].min_printable_x|default(0)|int %}
  {% set min_printable_y = printer["gcode_macro RatOS"].min_printable_y|default(0)|int %}
  {% set max_printable_x = printer["gcode_macro RatOS"].max_printable_x|default(200)|int %}
  {% set max_printable_y = printer["gcode_macro RatOS"].max_printable_y|default(200)|int %}

  {% set offset = 5 %}
  {% set x = [min_printable_x + offset, max_printable_x - offset] %}
  {% set y = min_printable_y + offset %}
  {% set z = printer["gcode_macro RatOS"].start_print_park_z_height|float %}

  SAVE_GCODE_STATE NAME=prime_blob_state            # save gcode state
  G90                                               # Absolute positioning
  M83                                               # Relative extrusion

  _T T={default_toolhead}

  # move to blob positions
  G0 Z{z} F{z_speed}                                # Lift to start print Z height
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 X{x[1]} F{speed}                               # move to blob position along the edge of the bed
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 X{x[0]} F{speed}                               # move to blob position along the edge of the bed
  G1 Y{y} F{speed}                                  # move to blob position along the edge of the bed
  G1 Z0.5 F{z_speed}                                # Lower to blob height
  
  # activate left extruder and sync right one with it
  ACTIVATE_EXTRUDER EXTRUDER=extruder               
  SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

  # extrude blobs
  G1 F200 E30                                       # Extrude a blob
  SET_FAN_SPEED FAN=fan_extruder SPEED=0.4          # 40% fan 
  SET_FAN_SPEED FAN=fan_extruder1 SPEED=0.4         # 40% fan 
  G1 Z5 F100 E5                                     # Move the extruder up by 5mm while extruding, breaks away from blob  

  # Move to wipe positions, but keep extruding so the wipe is attached to blob
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 F200 X{x[0] + 25} E1                           # Move to wipe position
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 F200 X{x[1] - 25} E1                           # Move to wipe position

  # Go down diagonally while extruding
  # Broken down in z moves under 2mm as a workaround for a tuning tower test.
  # The tuning tower command thinks a new print has been started when z moves over 2mm and aborts.
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 F200 X{x[0] + 30} Z3.8 E0.5
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 F200 X{x[1] - 30} Z3.8 E0.5
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 F200 X{x[0] + 35} Z2.6 E0.5
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 F200 X{x[1] - 35} Z2.6 E0.5
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 F200 X{x[0] + 40} Z1.4 E0.5
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 F200 X{x[1] - 40} Z1.4 E0.5
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 F200 X{x[0] + 45} Z0.5 E0.5
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 F200 X{x[1] - 45} Z0.5 E0.5

  M106 S0                                           # 0% fan

  # small wipe line 
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 F200 X{x[0] + 50} Z0.5 E0.6                    # wipe 
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 F200 X{x[1] - 50} Z0.5 E0.6                    # wipe 

  # Break away wipe
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 F{speed} X{x[0] + 100}                         # wipe
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 F{speed} X{x[1] - 100}                         # wipe

  # go home
  {% set home_t1 = printer.toolhead.axis_maximum.x|float %}
  {% set home_t0 = printer.configfile.config.dual_carriage.position_min|float %}
  {% set parking_offset = printer["gcode_macro RatOS"].toolhead_parking_offset %}
  G0 Z{10} F{z_speed}                               
  G1 Y{(min_printable_y + ((max_printable_y - min_printable_y) / 2))} F{speed}      
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[0]} # left toolhead
  G1 X{(home_t0 + parking_offset[0])} F{speed}      # move to parking position
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[1]} # right toolhead
  G1 X{(home_t1 + parking_offset[1])} F{speed}      # move to parking position

  SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
  {% if default_toolhead == 0 %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder               
  {% else %}
    ACTIVATE_EXTRUDER EXTRUDER=extruder{default_toolhead}               
  {% endif %}
  SET_DUAL_CARRIAGE CARRIAGE={toolhead_carriage[default_toolhead]} 

  RESTORE_GCODE_STATE NAME=prime_blob_state         # restore gcode

[gcode_macro LIGHT_ON]
gcode:
  SET_LED LED=led_t0 RED=1.0 GREEN=1.0 BLUE=1.0
  SET_LED LED=led_t1 RED=1.0 GREEN=1.0 BLUE=1.0

[gcode_macro LIGHT_OFF]
gcode:
  SET_LED LED=led_t0 RED=0.0 GREEN=0.0 BLUE=0.0
  SET_LED LED=led_t1 RED=0.0 GREEN=0.0 BLUE=0.0

[gcode_macro LIGHT_RED]
gcode:
  SET_LED LED=led_t0 RED=1.0 GREEN=0.0 BLUE=0.0
  SET_LED LED=led_t1 RED=1.0 GREEN=0.0 BLUE=0.0

[gcode_macro LIGHT_GREEN]
gcode:
  SET_LED LED=led_t0 RED=0.0 GREEN=1.0 BLUE=0.0
  SET_LED LED=led_t1 RED=0.0 GREEN=1.0 BLUE=0.0

[gcode_macro LIGHT_BLUE]
gcode:
  SET_LED LED=led_t0 RED=0.0 GREEN=0.0 BLUE=1.0
  SET_LED LED=led_t1 RED=0.0 GREEN=0.0 BLUE=1.0

[gcode_macro LIGHT_ORANGE]
gcode:
  SET_LED LED=led_t0 RED=1.0 GREEN=0.5 BLUE=0.0
  SET_LED LED=led_t1 RED=1.0 GREEN=0.5 BLUE=0.0
