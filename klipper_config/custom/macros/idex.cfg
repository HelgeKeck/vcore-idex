[gcode_macro IDEX_SINGLE]
gcode:
  {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed %}
  {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
  {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
  {% set printable_x = printer["gcode_macro RatOS"].printable_x %}
  {% set printable_center = (printable_x[1] - printable_x[0]) / 2 %}
  {% set home = printer["gcode_macro RatOS"].parking_position %}

  {% if idex_mode == "copy" or idex_mode == "mirror" %}

    # reset gcode offset
    {% if 'x' in printer.toolhead.homed_axes %}
      G1 X{printable_center} F{(speed*60)}
      SET_GCODE_OFFSET X_ADJUST={printable_center / 2} MOVE=0
    {% endif %}

    # activate default carriage
    SET_DUAL_CARRIAGE CARRIAGE={default_toolhead} MODE=PRIMARY

    {% if 'x' in printer.toolhead.homed_axes %}
      G90                                                           # absolute positioning
      SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}

      # move to parking position
      SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1}
      G1 X{home[0 if default_toolhead==1 else 1]} F{(speed*60)}   

      # move to center position
      SET_DUAL_CARRIAGE CARRIAGE={default_toolhead}
      G1 X{printable_center} F{(speed*60)}                          

      SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}
      M400                                                          # wait for movements

    {% endif %}

    # set extruder motion queue
    ACTIVATE_EXTRUDER EXTRUDER=extruder{'' if default_toolhead==0 else default_toolhead}
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1

    # set toolhead offset
    _SET_OFFSET T={default_toolhead}

    # update mainsail UI
    SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE={True if default_toolhead==0 else False}
    SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE={True if default_toolhead==1 else False}

  {% endif %}


[gcode_macro IDEX_COPY]
gcode:
  {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed %}
  {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
  {% set printable_x = printer["gcode_macro RatOS"].printable_x %}
  {% set printable_center = (printable_x[1] - printable_x[0]) / 2 %}
  {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
  {% set home = printer["gcode_macro RatOS"].parking_position %}

	{% if "xyz" in printer.toolhead.homed_axes %}
    {% if idex_mode != "copy" %}

      {% if idex_mode == "primary" or idex_mode == "inactive" %}
        # select default toolhead, for whatever reason
        T{default_toolhead}

        # park secondary toolhead, lets make sure its not in the way for the following default toolhead move
        SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1} MODE=PRIMARY
        G1 X{home[0 if default_toolhead==1 else 1]} F{(speed*60)}

        # move default toolhead to its new position
        SET_DUAL_CARRIAGE CARRIAGE={default_toolhead} MODE=PRIMARY
        G1 X{printable_center + (printable_center / 2)} F{(speed*60)}

        # move secondary toolhead to its new position
        SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1} MODE=PRIMARY
        G1 X{printable_center / 2} F{(speed*60)}

      {% endif %}

      # set extruder motion queue
      ACTIVATE_EXTRUDER EXTRUDER='extruder'
      SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
      SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

      # activate copy mode
      SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY

      # set toolhead offset
      {% if idex_mode != "mirror" %}
        SET_GCODE_OFFSET X_ADJUST=-{printable_center / 2} MOVE=0
      {% else %}
        _SET_OFFSET T={default_toolhead}
      {% endif %}
  
      # dance
      SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}
      G1 X{printable_center} F{(speed*60)}
      G1 X{printable_center - 30} F{(speed*60)}
      G1 X{printable_center + 30} F{(speed*60)}
      G1 X{printable_center} F{(speed*60)}
      SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}

      # update mainsail UI
      SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=True
      SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=True

    {% endif %}
	{% else %}
		{action_respond_info("Printer not homed")}
	{% endif %} 


[gcode_macro IDEX_MIRROR]
gcode:
  {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed %}
  {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
  {% set printable_x = printer["gcode_macro RatOS"].printable_x %}
  {% set printable_center = (printable_x[1] - printable_x[0]) / 2 %}
  {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead|default(0)|int %}
  {% set home = printer["gcode_macro RatOS"].parking_position %}

	{% if "xyz" in printer.toolhead.homed_axes %}
    {% if idex_mode != "mirror" %}

      {% if idex_mode == "primary" or idex_mode == "inactive" %}
        # select default toolhead, for whatever reason
        T{default_toolhead}

        # park secondary toolhead, lets make sure its not in the way for the following default toolhead move
        SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1} MODE=PRIMARY
        G1 X{home[0 if default_toolhead==1 else 1]} F{(speed*60)}

        # move default toolhead to its new position
        SET_DUAL_CARRIAGE CARRIAGE={default_toolhead} MODE=PRIMARY
        G1 X{printable_center + (printable_center / 2)} F{(speed*60)}

        # move secondary toolhead to its new position
        SET_DUAL_CARRIAGE CARRIAGE={0 if default_toolhead==1 else 1} MODE=PRIMARY
        G1 X{printable_center / 2} F{(speed*60)}

      {% endif %}

      # set extruder motion queue
      ACTIVATE_EXTRUDER EXTRUDER='extruder'
      SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
      SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder

      # activate mirror mode
      SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR

      # set toolhead offset
      {% if idex_mode != "copy" %}
        SET_GCODE_OFFSET X_ADJUST=-{printable_center / 2} MOVE=0
      {% else %}
        _SET_OFFSET T={default_toolhead}
      {% endif %}

      # dance
      SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}
      G1 X{printable_center} F{(speed*60)}
      G1 X{printable_center - 30} F{(speed*60)}
      G1 X{printable_center + 30} F{(speed*60)}
      G1 X{printable_center} F{(speed*60)}
      SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}

      # update mainsail UI
      SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=True
      SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=True

    {% endif %}
	{% else %}
		{action_respond_info("Printer not homed")}
	{% endif %} 


[gcode_macro IDEX_PARK]
gcode:
  # get IDEX mode
  {% set idex_mode = 'none' %}
  {% if printer["dual_carriage"] is defined %}
      {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% endif %}

  # park active toolhead
	{% if "xyz" in printer.toolhead.homed_axes %}
    {% if idex_mode != 'copy' or idex_mode != 'mirror' %}
      PARK_TOOLHEAD
    {% endif %} 
	{% endif %} 
