[gcode_macro IDEX_SINGLE]
gcode:
  {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed %}
  {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead %}
  {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
  {% set printable_x = printer["gcode_macro RatOS"].printable_x %}
  {% set printable_center = (printable_x[1] - printable_x[0]) / 2 %}

  {% if idex_mode == "copy" or idex_mode == "mirror" %}
    {% if 'x' in printer.toolhead.homed_axes %}
      G1 X{printable_center} F{(speed*60)}
      SET_KINEMATIC_POSITION X={printable_center + (printable_center / 2)}
    {% endif %}

    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY

    # {% if 'x' in printer.toolhead.homed_axes %}
    #   G90                                                           # absolute positioning
    #   SET_DUAL_CARRIAGE CARRIAGE=1
    #   SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}
    #   {% set home = printer["gcode_macro RatOS"].parking_position[0] %}
    #   G1 X{home} F{(speed*60)}                                      # move to parking position
    #   SET_DUAL_CARRIAGE CARRIAGE=0
    #   SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}
    #   G1 X{printable_center} F{(speed*60)}                          # move to print position
    #   SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}
    #   M400                                                          # wait for movements
    # {% endif %}

    ACTIVATE_EXTRUDER EXTRUDER='extruder'
    # ACTIVATE_EXTRUDER EXTRUDER='extruder1'
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder1
    # SET_DUAL_CARRIAGE CARRIAGE=0

    # {% if 'x' in printer.toolhead.homed_axes %}
    #   SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}
    #   G1 X{printable_center} F{(speed*60)}
    #   SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}
    # {% endif %}

    # _SET_OFFSET T={default_toolhead}

    # setting the mainsail UI
    SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=True
    SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=False
    # SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=False
    # SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=True

  {% endif %}


[gcode_macro IDEX_COPY]
gcode:
	{% if "xyz" in printer.toolhead.homed_axes %}
    # {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
    # {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed %}
    # {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
    # {% set printable_x = printer["gcode_macro RatOS"].printable_x %}
    # {% set printable_center = (printable_x[1] - printable_x[0]) / 2 %}
    # {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead %}

    # {% if idex_mode != "copy" %}

    #   {% if idex_mode == "primary" or idex_mode == "inactive" %}
    #     T{default_toolhead}
    #     SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    #     G1 X{printer["gcode_macro RatOS"].parking_position[0]} F{(speed*60)}
    #     SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    #     G1 X{printable_center + (printable_center / 2)} F{(speed*60)}
    #     SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    #     G1 X{printable_center / 2} F{(speed*60)}
    #   {% endif %}

    #   {% if idex_mode == "mirror" %}
    #     SET_KINEMATIC_POSITION X={printable_center + (printable_center / 2)}
    #   {% endif %}

    #   ACTIVATE_EXTRUDER EXTRUDER='extruder'
    #   SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
    #   SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    #   SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY

    #   SET_KINEMATIC_POSITION X={printable_center}
    #   _SET_OFFSET T={default_toolhead}
  
    #   SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}
    #   G1 X{printable_center} F{(speed*60)}
    #   G1 X{printable_center - 30} F{(speed*60)}
    #   G1 X{printable_center + 30} F{(speed*60)}
    #   G1 X{printable_center} F{(speed*60)}
    #   SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}

    #   # setting the mainsail UI
    #   SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=True
    #   SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=True

    # {% endif %}
	{% else %}
		{action_respond_info("Printer not homed")}
	{% endif %} 


[gcode_macro IDEX_MIRROR]
gcode:
	{% if "xyz" in printer.toolhead.homed_axes %}
    # {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
    # {% set speed = printer["gcode_macro RatOS"].toolchange_travel_speed %}
    # {% set acceleration = printer["gcode_macro RatOS"].toolchange_travel_accel %}
    # {% set printable_x = printer["gcode_macro RatOS"].printable_x %}
    # {% set printable_center = (printable_x[1] - printable_x[0]) / 2 %}
    # {% set default_toolhead = printer["gcode_macro RatOS"].default_toolhead %}

    # {% if idex_mode != "mirror" %}
    #   {% if idex_mode == "primary" or idex_mode == "inactive" %}
    #     T{default_toolhead}
    #     SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    #     G1 X{printer["gcode_macro RatOS"].parking_position[0]} F{(speed*60)}
    #     SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
    #     G1 X{printable_center + (printable_center / 2)} F{(speed*60)}
    #     SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    #     G1 X{printable_center / 2} F{(speed*60)}
    #   {% endif %}

    #   {% if idex_mode == "copy" %}
    #     SET_KINEMATIC_POSITION X={printable_center + (printable_center / 2)}
    #   {% endif %}

    #   ACTIVATE_EXTRUDER EXTRUDER='extruder'
    #   SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder
    #   SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    #   SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR

    #   SET_KINEMATIC_POSITION X={printable_center}
    #   _SET_OFFSET T={default_toolhead}

    #   SET_VELOCITY_LIMIT ACCEL={acceleration} ACCEL_TO_DECEL={(acceleration/2)}
    #   G1 X{printable_center} F{(speed*60)}
    #   G1 X{printable_center - 30} F{(speed*60)}
    #   G1 X{printable_center + 30} F{(speed*60)}
    #   G1 X{printable_center} F{(speed*60)}
    #   SET_VELOCITY_LIMIT ACCEL={printer.toolhead.max_accel} ACCEL_TO_DECEL={(printer.toolhead.max_accel/2)}

    #   # setting the mainsail UI
    #   SET_GCODE_VARIABLE MACRO=T0 VARIABLE=active VALUE=True
    #   SET_GCODE_VARIABLE MACRO=T1 VARIABLE=active VALUE=True

    # {% endif %}
	{% else %}
		{action_respond_info("Printer not homed")}
	{% endif %} 


[gcode_macro IDEX_PARK]
gcode:
  # get IDEX mode
  {% set idex_mode = 'none' %}
  {% if printer["dual_carriage"] is defined %}
      {% set idex_mode = printer["dual_carriage"].carriage_1|lower %}
  {% endif %}

  # park active toolhead
	{% if "xyz" in printer.toolhead.homed_axes %}
    {% if idex_mode != 'copy' or idex_mode != 'mirror' %}
      PARK_TOOLHEAD
    {% endif %} 
	{% endif %} 
